% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_box.R
\name{add_box}
\alias{add_box}
\title{add_box function}
\usage{
add_box(
  obj,
  spacing,
  n_categories,
  single_category_height,
  neutral_pos,
  n_ticks,
  from,
  to,
  label = NULL,
  logscale = FALSE,
  b = 10,
  show_axis = TRUE,
  arrow_labels = NULL,
  direction = "up",
  userect = FALSE
)
}
\arguments{
\item{obj}{The object to which the box will be added.}

\item{spacing}{The spacing between the box and the object above it.}

\item{n_categories}{The number of categories in the box.}

\item{single_category_height}{The height of each category in the box.}

\item{neutral_pos}{The position of the neutral point in the box.}

\item{n_ticks}{The number of ticks in the box.}

\item{from}{The starting point of the box.}

\item{to}{The ending point of the box.}

\item{label}{The label for the box (optional).}

\item{logscale}{Whether to use a logarithmic scale for the box (default is FALSE).}

\item{b}{The base for the logarithmic scale (default is 10).}

\item{show_axis}{Whether to show the axis for the box (default is TRUE).}

\item{arrow_labels}{The labels for the benefit arrows (default is NULL).}

\item{direction}{The direction of the benefit arrows (default is 'up').}

\item{userect}{Whether to use a rectangle for the box (default is FALSE).}
}
\value{
A list containing the label function, the box object, the options, the name, the header, and the y position.
}
\description{
This function adds a box to a plot. The box can be either a header or a regular box.
}
\examples{
\dontrun{
grid.newpage()
# create header
breaks_widths <- c(0.2, -0.1, 0.1, 0.2)
h_labels <- c('Benefits', 'Treatment\n(N=100)', 'Placebo\n(N=100)',
              'Comparison\nHR or Odds Ratio\n(95\% CI)')

stopifnot(length(breaks_widths)==length(h_labels))

my_header <- create_header(breaks_widths, h_labels)

box1_data <- add_box(my_header, 0, 3, 0.05, 3, 5, 0, 1, expression(x[1]^2), 
                     FALSE, direction='down')

for (i in 1:3) {
    box1_data$label_fun(sprintf('Efficacy endpoint \%g', i), 1, i)
    box1_data$label_fun('LY 10mg', 2, i, 1, 3)
    box1_data$label_fun('LY 20mg', 2, i, 2, 3)
    box1_data$label_fun('LY 40mg', 2, i, 3, 3)
    box1_data$label_fun('Placebo', 3, i)
}

box2_data <- add_box(box1_data, 0.07, 3, 0.02, 3, 5, 0, 1, expression(x[1]^2), 
                     FALSE, direction='down', show_axis=FALSE)

# add labels to box2
for (i in 1:3) {
    box2_data$label_fun(sprintf('Efficacy endpoint 1\%s', LETTERS[i]), 1, i)
    box2_data$label_fun('LY 100mg', 2, i)
    box2_data$label_fun('Placebo', 3, i)
}

box3_data <- add_box(box2_data, 0, 3, 0.04, 3, 5, 0, 1, "Efficacy endpoint", 
                     FALSE, direction='down')

# add labels to box3
for (i in 1:3) {
    box3_data$label_fun(sprintf('Efficacy endpoint 2\%s', LETTERS[i]), 1, i)
    box3_data$label_fun('LY 100mg', 2, i, 1, 2)
    box3_data$label_fun('LY 200mg', 2, i, 2, 2)
    box3_data$label_fun('Placebo', 3, i)
}

# function to simulate and plot forest tree

simulate_forest_plot <- function(box, N1=1, col='purple') {

    from_ <- min(box$axis$from, box$axis$to)
    to_ <- max(box$axis$from, box$axis$to)

    for (i in 1:(length(box$y_pos-1))) {
        for (j in 1:N1) {
            x_lower <- runif(1, from_, to_)
            x_upper <- runif(1, x_lower, to_)

            plot_forest_tree(box, x_lower, x_upper, runif(1, x_lower, x_upper), i, j, N1, col=col)
        }
    }
}

simulate_forest_plot(box1_data$box, 3, col='purple')
simulate_forest_plot(box2_data$box, 1, col='purple')
simulate_forest_plot(box3_data$box, 2, col='forestgreen')
}
}
